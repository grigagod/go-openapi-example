// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Train Travel API
 *
 * API for finding and booking train trips across Europe.  ## Run in Postman  Experiment with this API in Postman, using our Postman Collection.  [![Run In Postman](https://run.pstmn.io/button.svg =128pxx32px)](https://app.getpostman.com/run-collection/9265903-7a75a0d0-b108-4436-ba54-c6139698dc08?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D9265903-7a75a0d0-b108-4436-ba54-c6139698dc08%26entityType%3Dcollection%26workspaceId%3Df507f69d-9564-419c-89a2-cb8e4c8c7b8f)
 *
 * API version: 1.2.0
 * Contact: support@example.com
 */

package oas

// BankAccount - A bank account to take payment from. Must be able to make payments in the currency specified in the payment.
type BankAccount struct {
	Object string `json:"object,omitempty"`

	Name string `json:"name"`

	// The account number for the bank account, in string form. Must be a current account.
	Number string `json:"number"`

	// The sort code for the bank account, in string form. Must be a six-digit number.
	SortCode string `json:"sort_code,omitempty"`

	// The type of entity that holds the account. This can be either `individual` or `company`.
	AccountType string `json:"account_type"`

	// The name of the bank associated with the routing number.
	BankName string `json:"bank_name"`

	// Two-letter country code (ISO 3166-1 alpha-2).
	Country string `json:"country"`
}

// AssertBankAccountRequired checks if the required fields are not zero-ed
func AssertBankAccountRequired(obj BankAccount) error {
	elements := map[string]interface{}{
		"name":         obj.Name,
		"number":       obj.Number,
		"account_type": obj.AccountType,
		"bank_name":    obj.BankName,
		"country":      obj.Country,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertBankAccountConstraints checks if the values respects the defined constraints
func AssertBankAccountConstraints(obj BankAccount) error {
	return nil
}
