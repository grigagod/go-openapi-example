/*
Train Travel API

API for finding and booking train trips across Europe.  ## Run in Postman  Experiment with this API in Postman, using our Postman Collection.  [![Run In Postman](https://run.pstmn.io/button.svg =128pxx32px)](https://app.getpostman.com/run-collection/9265903-7a75a0d0-b108-4436-ba54-c6139698dc08?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D9265903-7a75a0d0-b108-4436-ba54-c6139698dc08%26entityType%3Dcollection%26workspaceId%3Df507f69d-9564-419c-89a2-cb8e4c8c7b8f)

API version: 1.2.0
Contact: support@example.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oas

import (
	"encoding/json"
)

// checks if the CreateBookingPayment200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBookingPayment200Response{}

// CreateBookingPayment200Response struct for CreateBookingPayment200Response
type CreateBookingPayment200Response struct {
	// Unique identifier for the payment. This will be a unique identifier for the payment, and is used to reference the payment in other objects.
	Id *string `json:"id,omitempty"`
	// Amount intended to be collected by this payment. A positive decimal figure describing the amount to be collected.
	Amount *float32 `json:"amount,omitempty"`
	// Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
	Currency *string               `json:"currency,omitempty"`
	Source   *BookingPaymentSource `json:"source,omitempty"`
	// The status of the payment, one of `pending`, `succeeded`, or `failed`.
	Status *string       `json:"status,omitempty"`
	Links  *LinksBooking `json:"links,omitempty"`
}

// NewCreateBookingPayment200Response instantiates a new CreateBookingPayment200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBookingPayment200Response() *CreateBookingPayment200Response {
	this := CreateBookingPayment200Response{}
	return &this
}

// NewCreateBookingPayment200ResponseWithDefaults instantiates a new CreateBookingPayment200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBookingPayment200ResponseWithDefaults() *CreateBookingPayment200Response {
	this := CreateBookingPayment200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateBookingPayment200Response) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookingPayment200Response) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateBookingPayment200Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateBookingPayment200Response) SetId(v string) {
	o.Id = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CreateBookingPayment200Response) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookingPayment200Response) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CreateBookingPayment200Response) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *CreateBookingPayment200Response) SetAmount(v float32) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CreateBookingPayment200Response) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookingPayment200Response) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CreateBookingPayment200Response) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *CreateBookingPayment200Response) SetCurrency(v string) {
	o.Currency = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *CreateBookingPayment200Response) GetSource() BookingPaymentSource {
	if o == nil || IsNil(o.Source) {
		var ret BookingPaymentSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookingPayment200Response) GetSourceOk() (*BookingPaymentSource, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *CreateBookingPayment200Response) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given BookingPaymentSource and assigns it to the Source field.
func (o *CreateBookingPayment200Response) SetSource(v BookingPaymentSource) {
	o.Source = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateBookingPayment200Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookingPayment200Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateBookingPayment200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CreateBookingPayment200Response) SetStatus(v string) {
	o.Status = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CreateBookingPayment200Response) GetLinks() LinksBooking {
	if o == nil || IsNil(o.Links) {
		var ret LinksBooking
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookingPayment200Response) GetLinksOk() (*LinksBooking, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CreateBookingPayment200Response) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given LinksBooking and assigns it to the Links field.
func (o *CreateBookingPayment200Response) SetLinks(v LinksBooking) {
	o.Links = &v
}

func (o CreateBookingPayment200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBookingPayment200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	return toSerialize, nil
}

type NullableCreateBookingPayment200Response struct {
	value *CreateBookingPayment200Response
	isSet bool
}

func (v NullableCreateBookingPayment200Response) Get() *CreateBookingPayment200Response {
	return v.value
}

func (v *NullableCreateBookingPayment200Response) Set(val *CreateBookingPayment200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBookingPayment200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBookingPayment200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBookingPayment200Response(val *CreateBookingPayment200Response) *NullableCreateBookingPayment200Response {
	return &NullableCreateBookingPayment200Response{value: val, isSet: true}
}

func (v NullableCreateBookingPayment200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBookingPayment200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
