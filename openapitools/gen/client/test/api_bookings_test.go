/*
Train Travel API

Testing BookingsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package oas

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/grigagod/go-openapi-example/openapitools/gen/client"
)

func Test_oas_BookingsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test BookingsAPIService CreateBooking", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BookingsAPI.CreateBooking(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BookingsAPIService DeleteBooking", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var bookingId string

		httpRes, err := apiClient.BookingsAPI.DeleteBooking(context.Background(), bookingId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BookingsAPIService GetBooking", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var bookingId string

		resp, httpRes, err := apiClient.BookingsAPI.GetBooking(context.Background(), bookingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BookingsAPIService GetBookings", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BookingsAPI.GetBookings(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
